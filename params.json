{"name":"TAJIUINO","tagline":"Hardware and software of TAIJIUINO DUE (Arduino DUE compitable board)","body":"#TAJIUINO DUE#\r\n\r\n[Taijiuino DUE](http://www.elechouse.com/elechouse/index.php?main_page=product_info&cPath=72_73&products_id=2214) is an Arduino-like board derives from [Arduino DUE](http://arduino.cc/en/Main/ArduinoBoardDue), it is designed by [Elechouse](http://www.elechouse.com).\r\n\r\n![elechouse-due0](http://www.elechouse.com/elechouse/images/product/TAIJIUINO%20DUE%20R2/Taijiuino%20R2-5.jpg)\r\n\r\n![elechouse-due1](http://www.elechouse.com/elechouse/images/product/TAIJIUINO%20DUE%20R2/Taijiuino%20R2-3.jpg)\r\n\r\n![elechoues-due2](http://www.elechouse.com/elechouse/images/product/TAIJIUINO%20DUE%20R2/Taijiuino%20R2-2.jpg)\r\n\r\n[MORE](http://www.elechouse.com/elechouse/index.php?main_page=product_info&cPath=72_73&products_id=2214)  \r\n\r\n## Details ##\r\n\r\n### Hardware ###\r\n**Schematic** and **Gerber files** of Taiji-Uino board.\r\n\r\n### Software ###\r\nSample code to demonstrate how to use Arduino DUE\r\n\r\n- **rtled** turn on *LEDRX* and turn off *LEDTX* for 0.5 second, then turn off *LEDRX* and turn on *LEDTX* for 0.5 second, repeatedly.\r\n- **taijidiagram** Demonstrate how to make **Native USB** into a serial port, this program controls all the GPIOs to turn on or turn off the LEDs which are connected to the GPIO, work together with TaijiDiagram, is used to test the TaijiUino Due, a bit like this:\r\n\r\n\t![Taijidiag](./image/taijidiag1.jpg)\r\n\r\n- **additional_pins** shows how to use TaijiUino additional pins.\r\n\r\n\r\n## Additional Pins\r\nAs what you see, there are more pins on Taijiuino DUE board. On the backside some silkscreen is marked aside them.  \r\nBecause Arduino IDE does not support these pins, so to use these pins, you need do some hack things to enable them. \r\n\r\n### Patch Arduino IDE\r\n- Download the **TAIJI-UINO** repository.\r\n- In `patch/additional-pins-patch` folder, find `variant.cpp` and `variant.h`\r\n- Open your Arduino IDE folder, and open `$ARDUINO/hardware/arduino/sam/variants/arduino_due_x` ($ARDUINO stands for the position of your Arduino IDE).\r\n- In the `arduino_due_x` folder you can see `variant.cpp` and `variant.h`, rename this two files to `variant.cpp.bak` and `variant.h.bak`, in case of you want go back to the origin IDE.\r\n- Copy the `patch/additional-pins-patch/{variant.cpp, variant.h}` to `arduino_due_x` folder\r\n- Open `software/additional_pins/additional_pins.ino`, upload it to your Taijiuino DUE, then test it.\r\n\r\n### Why need hack?\r\nWe aim at bringing you more pins, but origin Arduino IDE does not support it, so we just hack it.\r\n\r\n### What change?\r\nIn `variant.cpp`, add description of the additional pins to the structure ` PinDescription g_APinDescription[]`, number of these pins are from 92 to 109.  \r\nIn `variant.h`, define macros help to remember the index value.\r\nAccess these pins use three ways(name, pin number, or alias):\r\n\r\n\tFor Taijiuino Due R2:\r\n\tPin Name\t\t\t\tPin Number\t\t\tAlias\r\n\tPB24\t\t\t\t\t103\t\t\t\t\t  TP0\r\n\tPB23\t\t\t\t\t104\t\t\t\t\t  TP1\r\n\tPB22\t\t\t\t\t105\t\t\t\t\t  TP2\r\n\tPB27\t\t\t\t\t106\t\t\t\t\t  TP3\r\n\tPC20\t\t\t\t\t107\t\t\t\t\t  TP4\r\n\tPC10\t\t\t\t\t108\t\t\t\t\t  TP5\r\n\tPC11\t\t\t\t\t109\t\t\t\t\t  TP6\r\n\t---------------------------------------------------\r\n\tERXD1   \t\t\t\t98\t\t\t\t\t  TP7\r\n\tETXD1   \t\t\t\t95\t\t\t\t\t  TP8\r\n\tERXER   \t\t\t\t99\t\t\t\t      TP9\r\n\tERXDV  \t\t\t\t\t96\t\t\t\t\t  TP10\r\n\tEMDC    \t\t\t\t100\t\t\t\t\t  TP11\r\n\tERXD0   \t\t\t\t97\t\t\t\t\t  TP12\r\n\tEMDIO   \t\t\t\t101\t\t\t\t\t  TP13\r\n\tETXD0   \t\t\t\t94\t\t\t\t\t  TP14\r\n\tETXEN   \t\t\t\t93\t\t\t\t\t  TP15\r\n\tEXINT   \t\t\t\t102\t\t\t\t\t  TP16\r\n\tETXCLK  \t\t\t\t92\t\t\t\t\t  TP17\r\n\tCLKEN   \t\t\t\t109\t\t\t\t\t  TP6 \r\n\t\r\n\tFor Taijiuino Due R3 (new):\r\n\tPin Name \t\t\t\tPin Number\t\t\tAlias\r\n\tTP0\t\t\t\t\t\t103\t\t\t\t\t  PB23\r\n\tTP1\t\t\t\t\t\t104\t\t\t\t\t  PB23\r\n\tTP2\t\t\t\t\t\t105\t\t\t\t\t  PB22\r\n\tTP3\t\t\t\t\t\t106\t\t\t\t\t  PC27\r\n\tTP4\t\t\t\t\t\t107\t\t\t\t\t  PC20\r\n\tTP5\t\t\t\t\t\t108\t\t\t\t\t  PC10\r\n\tTP6\t\t\t\t\t\t109\t\t\t\t\t  PC11\r\n\t---------------------------------------------------\r\n\tERXD1   \t\t\t\t98\t\t\t\t\t  TP7\r\n\tETXD1   \t\t\t\t95\t\t\t\t\t  TP8\r\n\tERXER   \t\t\t\t99\t\t\t\t      TP9\r\n\tERXDV  \t\t\t\t\t96\t\t\t\t\t  TP10\r\n\tEMDC    \t\t\t\t100\t\t\t\t\t  TP11\r\n\tERXD0   \t\t\t\t97\t\t\t\t\t  TP12\r\n\tEMDIO   \t\t\t\t101\t\t\t\t\t  TP13\r\n\tETXD0   \t\t\t\t94\t\t\t\t\t  TP14\r\n\tETXEN   \t\t\t\t93\t\t\t\t\t  TP15\r\n\tEXINT   \t\t\t\t102\t\t\t\t\t  TP16\r\n\tETXCLK  \t\t\t\t92\t\t\t\t\t  TP17\r\n\tCLKEN   \t\t\t\t109\t\t\t\t\t  TP6\r\nSee more in [pin map](./pin_mapping.html).  \r\nDetails in `variant.cpp` and `variant.h`.  \r\n\r\n### Example\r\n\tvoid setup(void)\r\n\t{\r\n\t\t// All this three lines do the same thing\r\n\t\tpinMode(PB23, OUTPUT);\r\n\t\tpinMode(103, OUTPUT);\r\n\t\tpinMode(TP0, OUTPUT);\r\n\r\n\t\t// All this three lines do the same thing\r\n\t\tdigitalWrite(PB23, HIGH);\r\n\t\tdigitalWrite(103, HIGH);\r\n\t\tdigitalWrite(TP0, HIGH);\r\n\t}\r\n\r\n\tvoid loop(void)\r\n\t{\r\n\t\t//do nothing\r\n\t}\r\n\t\r\n## Get files ##\r\n\r\n    # get through GIT tools\r\n    git clone https://github.com/elechouse/TAIJI-UINO.git\r\nor\r\n\r\n\t# download the zip file\r\n\r\n## Buy\r\n[![elechouse][EHICON]][EHLINK]\r\n\r\n[EHLINK]: http://www.elechouse.com\r\n\r\n[EHICON]: https://raw.github.com/elechouse/CarDriverShield/master/image/elechouse.png\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}